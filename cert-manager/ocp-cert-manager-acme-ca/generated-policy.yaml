apiVersion: apps.open-cluster-management.io/v1
kind: PlacementRule
metadata:
  name: placement-policy-openshift-acme-ca-route53
  namespace: global-policies
spec:
  clusterSelector:
    matchExpressions:
    - key: cloud
      operator: In
      values:
      - Amazon
    - key: vendor
      operator: In
      values:
      - OpenShift
---
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: binding-policy-openshift-acme-ca-route53
  namespace: global-policies
placementRef:
  apiGroup: apps.open-cluster-management.io
  kind: PlacementRule
  name: placement-policy-openshift-acme-ca-route53
subjects:
- apiGroup: policy.open-cluster-management.io
  kind: Policy
  name: policy-openshift-acme-ca-route53
---
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  annotations:
    policy.open-cluster-management.io/categories: CM Configuration Management
    policy.open-cluster-management.io/controls: CM-2 Baseline Configuration
    policy.open-cluster-management.io/standards: NIST SP 800-53
  name: policy-openshift-acme-ca-route53
  namespace: global-policies
spec:
  disabled: false
  policy-templates:
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-openshift-acme-ca-route53
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: cert-manager.io/v1
            kind: ClusterIssuer
            metadata:
              name: letsencrypt-staging
              namespace: kube-system
            spec:
              acme:
                email: ${EMAIL_ADDRESS}
                preferredChain: ""
                privateKeySecretRef:
                  name: letsencrypt-secret
                server: https://acme-staging-v02.api.letsencrypt.org/directory
                solvers:
                - http01:
                    ingress:
                      class: openshift-default
                  selector:
                    matchLabels:
                      use-route-solver: "true"
                - dns01:
                    route53:
                      accessKeyID: '{{ fromSecret "kube-system" "aws-creds" "aws_access_key_id"}}'
                      hostedZoneID: '{{ (lookup "config.openshift.io/v1" "DNS" ""
                        "cluster").spec.publicZone.id }}'
                      region: '{{ (lookup "config.openshift.io/v1" "Infrastructure"
                        "" "cluster").status.platformStatus.aws.region }}'
                      secretAccessKeySecretRef:
                        key: '{{ fromSecret "kube-system" "aws-creds" "aws_secret_access_key"}}'
                        name: aws-creds
                  selector:
                    matchLabels:
                      use-dns-solver: "true"
        pruneObjectBehavior: DeleteIfCreated
        remediationAction: enforce
        severity: medium
